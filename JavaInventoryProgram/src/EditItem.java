
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Vincent
 */
public class EditItem extends javax.swing.JDialog {

    LinkedList list = new LinkedList();
    int indexToUpdate = 0;

    /**
     * Creates new form EditItem
     */
    public EditItem(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        try {
            initializeRecord();
        } catch (FileNotFoundException e) {

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        editItemLabel = new javax.swing.JLabel();
        editItemMainPanel = new javax.swing.JPanel();
        itemNameInput = new javax.swing.JTextField();
        itemCodeInput = new javax.swing.JTextField();
        itemStocksInput = new javax.swing.JTextField();
        itemPriceInput = new javax.swing.JTextField();
        itemCodeLabel = new javax.swing.JLabel();
        itemNameLabel = new javax.swing.JLabel();
        itemStocksLabel = new javax.swing.JLabel();
        itemPriceLabel = new javax.swing.JLabel();
        editButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        editItemLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editItemLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        editItemLabel.setText("Edit Item");

        itemNameInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemNameInputKeyPressed(evt);
            }
        });

        itemCodeInput.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemCodeInputKeyPressed(evt);
            }
        });

        itemCodeLabel.setText("Item Code");

        itemNameLabel.setText("Item Name");

        itemStocksLabel.setText("Item Stocks");

        itemPriceLabel.setText("Unit Price");

        editButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        editButton.setText("Edit");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        cancelButton.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout editItemMainPanelLayout = new javax.swing.GroupLayout(editItemMainPanel);
        editItemMainPanel.setLayout(editItemMainPanelLayout);
        editItemMainPanelLayout.setHorizontalGroup(
            editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editItemMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(editItemMainPanelLayout.createSequentialGroup()
                        .addComponent(editButton, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, editItemMainPanelLayout.createSequentialGroup()
                        .addGroup(editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemCodeInput)
                            .addGroup(editItemMainPanelLayout.createSequentialGroup()
                                .addComponent(itemCodeLabel)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemNameLabel)
                            .addComponent(itemNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(editItemMainPanelLayout.createSequentialGroup()
                        .addGroup(editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemStocksInput, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemStocksLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(editItemMainPanelLayout.createSequentialGroup()
                                .addComponent(itemPriceLabel)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(itemPriceInput))))
                .addContainerGap())
        );
        editItemMainPanelLayout.setVerticalGroup(
            editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(editItemMainPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(itemCodeInput, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                    .addComponent(itemNameInput))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemStocksLabel)
                    .addComponent(itemPriceLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(itemStocksInput, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(itemPriceInput, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(editItemMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(editItemLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(editItemMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(editItemLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(editItemMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void itemCodeInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemCodeInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            String itemCodeToFind = itemCodeInput.getText();

            boolean found = false;
            int i = 0;
            int index = 0;

            int listLength = list.length();
            for (i = 0; i < listLength; i++) {
                String itemCode = Integer.toString(LinkedList.itemList[i].getItemCode());
                if (itemCodeToFind.equals(itemCode)) {
                    found = true;
                    index = i;
                    indexToUpdate = i;
                    break;
                }
            }

            if (found) {
                itemCodeInput.setText(Integer.toString(LinkedList.itemList[index].getItemCode()));
                itemNameInput.setText(LinkedList.itemList[index].getItemName());
                itemStocksInput.setText(Integer.toString(LinkedList.itemList[index].getItemStock()));
                itemPriceInput.setText(Double.toString(LinkedList.itemList[index].getItemPrice()));
            }
        }
    }//GEN-LAST:event_itemCodeInputKeyPressed

    private void itemNameInputKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemNameInputKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == evt.VK_ENTER) {
            String itemNameToFind = itemNameInput.getText();

            boolean found = false;
            int i = 0;
            int index = 0;

            int listLength = list.length();
            for (i = 0; i < listLength; i++) {
                String itemName = LinkedList.itemList[i].getItemName();
                if (itemNameToFind.equalsIgnoreCase(itemName)) {
                    found = true;
                    index = i;
                    indexToUpdate = i;
                    break;
                }
            }

            if (found) {
                itemCodeInput.setText(Integer.toString(LinkedList.itemList[index].getItemCode()));
                itemNameInput.setText(LinkedList.itemList[index].getItemName());
                itemStocksInput.setText(Integer.toString(LinkedList.itemList[index].getItemStock()));
                itemPriceInput.setText(Double.toString(LinkedList.itemList[index].getItemPrice()));
            }
            else {
                JOptionPane.showMessageDialog(null, "Item not found!");
            }
        }
    }//GEN-LAST:event_itemNameInputKeyPressed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        // TODO add your handling code here:
        LinkedList.itemList[indexToUpdate].setItemCode(Integer.parseInt(itemCodeInput.getText()));
        LinkedList.itemList[indexToUpdate].setItemName(itemNameInput.getText());
        LinkedList.itemList[indexToUpdate].setItemStock(Integer.parseInt(itemStocksInput.getText()));
        LinkedList.itemList[indexToUpdate].setItemPrice(Double.parseDouble(itemPriceInput.getText()));

        try {
            int i = 0;

            BufferedWriter writer1 = new BufferedWriter(new FileWriter("inventoryRecords.txt"));

            int itemCode = LinkedList.itemList[i].getItemCode();
            String itemName = LinkedList.itemList[i].getItemName();
            int itemStock = LinkedList.itemList[i].getItemStock();
            double itemPrice = LinkedList.itemList[i].getItemPrice();

            writer1.write(itemCode + ";" + itemName + ";" + itemStock + ";" + itemPrice);
            writer1.close();

            int listLength = list.length();

            BufferedWriter writer2 = new BufferedWriter(new FileWriter("inventoryRecords.txt", true));
            for (i = 1; i < listLength; i++) {
                itemCode = LinkedList.itemList[i].getItemCode();
                itemName = LinkedList.itemList[i].getItemName();
                itemStock = LinkedList.itemList[i].getItemStock();
                itemPrice = LinkedList.itemList[i].getItemPrice();

                writer2.append("\n" + itemCode + ";" + itemName + ";" + itemStock + ";" + itemPrice);
            }
            writer2.close();

            // every at the end of the operation, clear the lists and arrays.
            list.clear();
            list.clearItemList();
        } 
        catch (IOException e) {
        }
        
        JOptionPane.showMessageDialog(null, "Item updated successfuly!");
        this.dispose();
    }//GEN-LAST:event_editButtonActionPerformed

    private void initializeRecord() throws FileNotFoundException {
        int i = 0;
        FileReader inputFile = new FileReader("inventoryRecords.txt");
        Scanner scan = new Scanner(inputFile);
        String tempString = "";

        while (scan.hasNextLine()) {
            tempString = scan.nextLine();
            String temp[] = tempString.split(";");

            String itemName = temp[1];
            int itemStocks = Integer.parseInt(temp[2]);
            double itemPrice = Double.parseDouble(temp[3]);

            list.insert(itemName, itemStocks, itemPrice);
        }

        int listLength = list.length();
        // populate the array of objects
        list.getItemList();

        for (i = 0; i < listLength; i++) {
            int itemCode = LinkedList.itemList[i].getItemCode();
            String itemName = LinkedList.itemList[i].getItemName();
            int itemStock = LinkedList.itemList[i].getItemStock();
            double itemPrice = LinkedList.itemList[i].getItemPrice();

            System.out.println(itemCode + " " + itemName + " " + itemStock + " " + itemPrice);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EditItem dialog = new EditItem(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel editItemLabel;
    private javax.swing.JPanel editItemMainPanel;
    private javax.swing.JTextField itemCodeInput;
    private javax.swing.JLabel itemCodeLabel;
    private javax.swing.JTextField itemNameInput;
    private javax.swing.JLabel itemNameLabel;
    private javax.swing.JTextField itemPriceInput;
    private javax.swing.JLabel itemPriceLabel;
    private javax.swing.JTextField itemStocksInput;
    private javax.swing.JLabel itemStocksLabel;
    // End of variables declaration//GEN-END:variables
}
